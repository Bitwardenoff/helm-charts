---
name: Release
run-name: Release - ${{ inputs.release_mode }}

on:
  workflow_dispatch:
    inputs:
      release_mode:
        description: "Release Mode"
        default: "Standard Release"
        type: choice
        options:
          - Standard Release
          - Dry Run

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-22.04
    steps:
      - name: Branch check
        if: ${{ github.event.inputs.release_mode != 'Dry Run' }}
        run: |
          if [[ "$GITHUB_REF" != "refs/heads/main" ]]; then
            echo "==================================="
            echo "[!] Can only release from the 'main' branch"
            echo "==================================="
            exit 1
          fi

  release:
    name: Release Helm chart
    runs-on: ubuntu-22.04
    needs: setup
    permissions:
      actions: read
      contents: write
      packages: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Set up Helm
        uses: Azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78 # v3.5
        with:
          version: v3.13.1

      - name: Download Helm chart artifact
        uses: bitwarden/gh-actions/download-artifacts@master
        with:
          branch: main
          path: .cr-release-packages
          workflow: build.yml
          workflow_conclusion: success

      - name: Release Helm chart
        if: ${{ github.event.inputs.release_mode != 'Dry Run' }}
        env:
          CR_GENERATE_RELEASE_NOTES: true
          CR_MAKE_RELEASE_LATEST: true
          CR_SKIP_EXISTING: true
          CR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: helm/chart-releaser-action@be16258da8010256c6e82849661221415f031968 # v1.5.0
        with:
          skip_packaging: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push charts to GitHub Container Registry
        if: ${{ github.event.inputs.release_mode != 'Dry Run' }}
        run: |
          shopt -s nullglob
          for pkg in .cr-release-packages/*; do
            if [ -z "${pkg:-}" ]; then
              break
            fi
            helm push "${pkg}" "oci://ghcr.io/${GITHUB_REPOSITORY_OWNER}/charts"
          done

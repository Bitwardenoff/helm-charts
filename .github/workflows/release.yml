---
name: Release
run-name: Release ${{ inputs.release_type }}

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Release Options"
        required: true
        default: "Initial Release"
        type: choice
        options:
          - Initial Release
          - Redeploy
          - Dry Run

env:
  _AZ_REGISTRY: 'bwhelmtest.azurecr.io'
  ACR_REGISTRY_USER: bwhelmtest

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-22.04
    outputs:
      release_version: ${{ steps.version.outputs.version }}
      branch-name: ${{ steps.branch.outputs.branch-name }}
    steps:
      - name: Branch check
        if: ${{ github.event.inputs.release_type != 'Dry Run' }}
        run: |
          if [[ "$GITHUB_REF" != "refs/heads/master" ]]; then
            echo "==================================="
            echo "[!] Can only release from the 'master' branch"
            echo "==================================="
            #exit 1
          fi

      - name: Checkout repo
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0

      ####  ADD BACK CHECK VERSION ####

      - name: Get branch name
        id: branch
        run: |
          BRANCH_NAME=$(basename ${{ github.ref }})
          echo "branch-name=$BRANCH_NAME" >> $GITHUB_OUTPUT

  release-docker:
    name: Push helm chart to Docker Hub
    runs-on: ubuntu-22.04
    needs: setup
    environment: Beta
    env:
      #_RELEASE_VERSION: ${{ needs.setup.outputs.release_version }}
      _BRANCH_NAME: ${{ needs.setup.outputs.branch-name }}

    steps:
      - name: Print environment
        env:
          RELEASE_OPTION: ${{ github.event.inputs.release_type }}
        run: |
          whoami
          docker --version
          echo "GitHub ref: $GITHUB_REF"
          echo "GitHub event: $GITHUB_EVENT"
          echo "Github Release Option: $RELEASE_OPTION"
          
      - name: Checkout repo
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0

      - name: Helm tool installer
        uses: Azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78 #v3
        
      - name: Pull latest chart   
        id: pull_chart
        run: |
          rm -f bitwarden-*.tgz
          echo "${{ secrets.ACR_PASSWORD }}" | helm registry login ${{ env._AZ_REGISTRY}} -u ${{ env.ACR_REGISTRY_USER }} --password-stdin
          helm pull oci://${{ env._AZ_REGISTRY }}/helm/bitwarden
          path=$(ls bitwarden-*.tgz)
          echo $path
          echo "path=$path" >> "$GITHUB_OUTPUT"
          helm registry logout ${{ env._AZ_REGISTRY }}

          
      #- name: Setup DCT
      #  id: setup-dct
      #  uses: bitwarden/gh-actions/setup-docker-trust@082f5e05ed97c3601c6f3179250b1a761c4d647f
      #  with:
      #    azure-creds: ${{ secrets.AZURE_KV_CI_SERVICE_PRINCIPAL }}
      #    azure-keyvault-name: "bitwarden-ci"
    
      - name: Login to Azure
        uses: Azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2 # v1.4.7
        with:
          creds: ${{ secrets.AZURE_KV_CI_SERVICE_PRINCIPAL }}
          
      - name: Retrieve secrets
        id: get-secrets
        uses: bitwarden/gh-actions/get-keyvault-secrets@d48767f3d58bbe88678e0fb0c8d7044c55d7dda0
        with:
          keyvault: "bitwarden-ci"
          secrets: "docker-password,
            docker-username"

          
      - name: Push version 
        if: ${{ github.event.inputs.release_type != 'Dry Run' }}
        env:
          #DOCKER_CONTENT_TRUST: 1
          #DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE: ${{ steps.setup-dct.outputs.dct-delegate-repo-passphrase }}
          DOCKER_USERNAME: ${{ steps.get-secrets.outputs.docker-username }}
          DOCKER_PASSWORD: ${{ steps.get-secrets.outputs.docker-password }}
        run: |          
          echo ${{ steps.pull_chart.outputs.path }}
          ls
          echo #DOCKER_PASSWORD | helm registry login registry-1.docker.io -u $DOCKER_USERNAME --password-stdin

      - name: Log out of Docker and disable Docker Notary
        run: |
          helm registry logout
          # docker logout
          # echo "DOCKER_CONTENT_TRUST=0" >> $GITHUB_ENV

#  release:
#    name: Create GitHub Release
#    runs-on: ubuntu-22.04
#    needs:
#      - setup
#      - deploy
#    steps:
#      - name: Download latest Release Docker Stubs
#        if: ${{ github.event.inputs.release_type != 'Dry Run' }}
#        uses: bitwarden/gh-actions/download-artifacts@fdcf1fcec3b04762ce48216cbf3af32498bed74c
#        with:
#          workflow: build.yml
#          workflow_conclusion: success
#          branch: ${{ needs.setup.outputs.branch-name }}
#          artifacts: "docker-stub-US.zip,
#            docker-stub-US-sha256.txt,
#            docker-stub-EU.zip,
#            docker-stub-EU-sha256.txt,
#            swagger.json"

 #     - name: Dry Run - Download latest Release Docker Stubs
 #       if: ${{ github.event.inputs.release_type == 'Dry Run' }}
 #       uses: bitwarden/gh-actions/download-artifacts@fdcf1fcec3b04762ce48216cbf3af32498bed74c
 #       with:
 #         workflow: build.yml
 #         workflow_conclusion: success
 #         branch: master
 #         artifacts: "docker-stub-US.zip,
 #           docker-stub-US-sha256.txt,
 #           docker-stub-EU.zip,
 #           docker-stub-EU-sha256.txt,
 #           swagger.json"

 #     - name: Create release
 #       if: ${{ github.event.inputs.release_type != 'Dry Run' }}
 #       uses: ncipollo/release-action@6c75be85e571768fa31b40abf38de58ba0397db5 # v1.13.0
 #       with:
 #         artifacts: "docker-stub-US.zip,
 #           docker-stub-US-sha256.txt,
 #           docker-stub-EU.zip,
 #           docker-stub-EU-sha256.txt,
 #           swagger.json"
 #         commit: ${{ github.sha }}
 #         tag: "v${{ needs.setup.outputs.release_version }}"
 #         name: "Version ${{ needs.setup.outputs.release_version }}"
 #         body: "<insert release notes here>"
 #         token: ${{ secrets.GITHUB_TOKEN }}
 #         draft: true

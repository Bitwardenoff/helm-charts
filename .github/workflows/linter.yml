---
name: Lint

on:
  pull_request:
    paths:
      - 'charts/**'
  push:
    branches:
      - main
    paths:
      - 'charts/**'
  workflow_dispatch:

jobs:
  lint:
    name: Lint Helm charts
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: Azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78 # v3.5
        with:
          version: 'v3.13.1'

      - name: Setup lynx
        run: sudo apt install lynx

      - name: Set up Python
        uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4.7.1
        with:
          python-version: '3.12'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@b43128a8b25298e1e7b043b78ea6613844e079b1 # v2.6.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          CHANGED=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$CHANGED" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        env:
          CT_CHECK_VERSION_INCREMENT: false
        run: ct lint --target-branch ${{ github.event.repository.default_branch }}

      - name: Create kind cluster
        #if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1.8.0
        with:
          config: .github/workflows/config/cluster.yaml

      - name: Setup cluster
        #if: steps.list-changed.outputs.changed == 'true'
        run: |
          installation_id=$(uuidgen)
          echo $installation_id
          installation_key=$(openssl rand -base64 12)
          sa_password=$(openssl rand -base64 12)

          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
          kubectl delete -A ValidatingWebhookConfiguration ingress-nginx-admission
          sudo echo "127.0.0.1 bitwarden.localhost" | sudo tee -a /etc/hosts

          kubectl create ns bitwarden

          kubectl config set-context --current --namespace=bitwarden

          kubectl create secret generic custom-secret \
            --from-literal=globalSettings__installation__id=$installation_id \
            --from-literal=globalSettings__installation__key=$installation_key \
            --from-literal=globalSettings__mail__smtp__username="REPLACE" \
            --from-literal=globalSettings__mail__smtp__password="REPLACE" \
            --from-literal=globalSettings__yubico__clientId="REPLACE" \
            --from-literal=globalSettings__yubico__key="REPLACE" \
            --from-literal=SA_PASSWORD=$sa_password

      - name: Run chart-testing (install)
        # if: steps.list-changed.outputs.changed == 'true'
        run: ct install --target-branch ${{ github.event.repository.default_branch }} --skip-clean-up --namespace bitwarden

      - name: Test install
        #if: steps.list-changed.outputs.changed == 'true'
        run: |
          echo "*****DEPLOYMENTS*****"
          kubectl get deployments
          echo "*****PODS*****"
          kubectl get pods
          echo "*****SERVICES*****"
          kubectl get svc
          echo "*****JOBS*****"
          kubectl get jobs
          echo "*****INGRESS*****"
          kubectl describe ingress

          echo "*****HOME*****"
          home=$(curl -Lks https://bitwarden.localhost -w httpcode=%{http_code})
          echo $home | lynx -stdin -dump -width=100
          httpCode=$(echo "${home}" | grep -Po 'httpcode=\K(\d\d\d)')
          bodyCheck=$(echo "${home}" | grep -Po 'Bitwarden')
          if [ ${httpCode} -ne 200]; then
            raise error "Home page failed to load.  HTTP code was $httpCode"
          fi

          if [ ${bodyCheck} -ne 200]; then
            raise error "Home page failed to load.  Please check body output above."
          fi

          echo "Home OK."

          echo "*****API/CONFIG*****"
          curl -Lks https://bitwarden.localhost/api/config | lynx -stdin -dump -width=100
          echo "*****ADMIN*****"
          curl -Lks https://bitwarden.localhost/admin | lynx -stdin -dump -width=100
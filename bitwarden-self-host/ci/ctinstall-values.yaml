
fullnameOverride: ""
nameOverride: ""

general:
  domain: "bitwarden.localhost"
  ingress:
    enabled: true
    type: "nginx"
     ## - Annotations to add to the Ingress resource
    annotations: {}
    ## - Labels to add to the Ingress resource
    labels: {}
    # Certificate options
    tls:
      # TLS certificate secret name
      name:
      # Cluster cert issuer (ex. Let's Encrypt) name if one exists
      clusterIssuer:

  coreVersion: "2023.9.0"
  webVersion: "2023.9.1"
  disableUserRegistration: "false"
  hibpApiKey: "false"
  admins: "false"
  labels: {}

# Specify the name of the shared storage class
sharedStorageClassName: "shared-storage"

secrets:
  secretSource: "fromValues"
  fromEnv:
    fileName: "envvars.env"
  fromValues:
    globalSettings__installation__id: "e43fa955-8d18-4489-a828-afb201145e46"
    globalSettings__installation__key: "kp2msIQL62u3wotUiJDj"
    globalSettings__mail__replyToEmail: "noreply@bitwarden.localhost"
    globalSettings__mail__smtp__host: "smtp.sendgrid.net"
    globalSettings__mail__smtp__port: "386"
    globalSettings__mail__smtp__ssl: "false"
    globalSettings__mail__smtp__username:
    globalSettings__mail__smtp__password:
    globalSettings__yubico__clientId:
    globalSettings__yubico__key:
    # This is the password used to setup the database, this should match what is used in the connection string if using the default database.
    # Only needed if deploying the database pod
    SA_PASSWORD: "6zdrv%d5woAgP&"
    # This setting is calculated unless the database pod is set to disabled in the database section below
    globalSettings__sqlServer__connectionString:
  # Specify a secret name which contains the secret values set above. Example given in secret-example.md
  fromSecret:
    secretName: custom-secret
    secretProviderClass:

component:
  # The Admin component
  admin:
    # Additional deployment labels
    labels: {}
    # Image name, tag, and pull policy
    image:
      name: bitwarden/admin
    resources:
      requests:
        memory: "64Mi"
        cpu: "50m"
      limits:
        memory: "128Mi"
        cpu: "100m"
  api:
    # Additional deployment labels
    labels: {}
    # Image name, tag, and pull policy
    image:
      name: bitwarden/api
    resources:
      requests:
        memory: "64Mi"
        cpu: "50m"
      limits:
        memory: "128Mi"
        cpu: "100m"
  attachments:
    # Additional deployment labels
    labels: {}
    # Image name, tag, and pull policy
    image:
      name: bitwarden/attachments
    resources:
      requests:
        memory: "64Mi"
        cpu: "50m"
      limits:
        memory: "128Mi"
        cpu: "100m"
  events:
    # Additional deployment labels
    labels: {}
    # Image name, tag, and pull policy
    image:
      name: bitwarden/events
    resources:
      requests:
        memory: "64Mi"
        cpu: "50m"
      limits:
        memory: "128Mi"
        cpu: "100m"
  icons:
    # Additional deployment labels
    labels: {}
    # Image name, tag, and pull policy
    image:
      name: bitwarden/icons
    resources:
      requests:
        memory: "64Mi"
        cpu: "50m"
      limits:
        memory: "128Mi"
        cpu: "100m"
  identity:
    # Additional deployment labels
    labels: {}
    # Image name, tag, and pull policy
    image:
      name: bitwarden/identity
    resources:
      requests:
        memory: "64Mi"
        cpu: "50m"
      limits:
        memory: "128Mi"
        cpu: "100m"
  notifications:
    # Additional deployment labels
    labels: {}
    # Image name, tag, and pull policy
    image:
      name: bitwarden/notifications
    resources:
      requests:
        memory: "64Mi"
        cpu: "50m"
      limits:
        memory: "128Mi"
        cpu: "100m"
  scim:
    # Additional deployment labels
    labels: {}
    # Image name, tag, and pull policy
    image:
      name: bitwarden/scim
    resources:
      requests:
        memory: "64Mi"
        cpu: "50m"
      limits:
        memory: "128Mi"
        cpu: "100m"
  sso:
    # Additional deployment labels
    labels: {}
    # Image name, tag, and pull policy
    image:
      name: bitwarden/sso
    resources:
      requests:
        memory: "64Mi"
        cpu: "50m"
      limits:
        memory: "128Mi"
        cpu: "100m"
  web:
    # Additional deployment labels
    labels: {}
    # Image name, tag, and pull policy
    image:
      name: bitwarden/web
    resources:
      requests:
        memory: "64Mi"
        cpu: "50m"
      limits:
        memory: "128Mi"
        cpu: "100m"
volume:
  dataprotection:
    size: "1Gi"
    labels: {}
  attachments:
    size: 1Gi
    labels: {}
  licenses:
    size: 1Gi
    labels: {}
#
# Configure service account
#
serviceAccount: service-account

#
# Configure database
#
database:
  # deploy the database pod?  if false, a connection string will need to be provided through one of the configuration providers defined above
  enabled: true
  # Labels to add to the MSSQL deployment
  labels: {}
  # Image name, tag, and pull policy
  image:
    name: mcr.microsoft.com/mssql/server
    # Tag of the image to use. (Defaults to general.coreVersion)
    tag: 2019-CU17-ubuntu-20.04
  # The containers are limited to the resources below
  resources:
    requests:
      memory: "2G"
      cpu: "100m"
    limits:
      memory: "2G"
      cpu: "500m"

  # The MSSQL volumes
  volume:
    backups:
      # Storage size
      size: 1Gi
    data:
      # Storage size
      size: 10Gi
    log:
      # Storage size
      size: 10Gi


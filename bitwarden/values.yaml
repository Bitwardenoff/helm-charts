# Default values for bitwarden.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

#
# General configuration options
#
general:
  # Core server version to install
  coreVersion: "1.41.3"
  # Web version to install
  webVersion: "2.20.2"
  # Labels to apply to all resources
  labels: {}
    # label1: value1
    # label2: value2
  # Certificate options
  cert:
    # CA Certificate information
    ca:
      enabled: false
      annotations: {}
      labels: {}
      secretName: cacert
      secretValue: ""
    ssl:
      enabled: false
      certValue: ""
      keyValue: ""
  # The name of the Config Map to store the Bitwarden configuration
  configMapName: config
  # Domain used for Bitwarden installation
  domain: "bitwarden.localhost"
  # This value can be generated at https://bitwarden.com/host/
  installationId: ""
  # This value can be generated at https://bitwarden.com/host/
  installationKey: ""
  yubico:
    # Used for YubiCloud Validation Service or Self-hosted Yubico Validation Server
    clientId: ""
    # Used for YubiCloud Validation Service or Self-hosted Yubico Validation Server
    key: ""
    # Primary URL for self-hosted Yubico Validation Server.  Not needed if using YubiCloud Validation Service.
    validationURLs: []
  email:
    # Email address used for invitations, typically no-reply@smtp-host
    replyToEmail: "no-reply@bitwarden.localhost"
    # Your SMTP server hostname (recommended) or IP address
    smtpHost: "smtp.gmail.com"
    # The SMTP port used by the SMTP server
    smtpPort: "587"
    # Whether your SMTP server uses an encryption protocol, "true" for SSL, "false" for TLS
    smtpSsl: "false"
    # A valid username for the SMTP host
    smtpUsername: "username"
    # A valid password for the SMTP host
    smtpPassword: "password"
  # Specify the number of hours after which an Organization Invite will expire (120 by default)
  organizationInviteExpirationHours: "120"
  # Specify "true" to disable new users signing up for an account on this instance via the Registration page.
  disableUserRegistration: "false"
  hibp:
    # Used for checking password leaks. Available here: https://haveibeenpwned.com/API/Key
    apiKey: ""
  # Email addresses which may access the System Administrator Portal, each entry should be separated by a comma
  admins: ""

#
#  Configure ingress
#
ingress:
  ## - If this is set to true, an Ingress resource will be created
  enabled: false
  ## - Name of the Ingress resource
  name: ingress
  ## Ingress Route Prefix
  routePrefix: /
  ## - Annotations to add to the Ingress resource
  annotations: {}
  ## - Labels to add to the Ingress resource
  labels: {}
  ## - Class name to use for Ingress resource
  # className: public
  ## - Path Type for Ingress resource - Can be Exact, Prefix, or ImplementationSpecific
  # pathType: ImplementationSpecific
  ## Secret name to use for TLS on the Ingress resource
  tls:
    secret: tls
    ## - Annotations to add to the TLS Secret
    annotations: {}
    ## - Labels to add to the TLS Secret
    labels: {}

#
# Configure database
#
database:
  ## - The database type that will be used - Can either be "container" or "mssql"
  #  If database.type == "container" then see the following sections:
  #     deployment.mssql
  #     service.mssql
  #     volume.mssql
  type: container
  # If database.type == "mssql":
  # Hostname of the database
  hostname: database-hostname.domain.com
  # Port the database is listening for connections on
  port: 1433
  # Admin user of the database
  user: admin
  # Admin password of the database
  password: password

#
# Configure deployments
#
deployment:
  # The Admin deployment
  admin:
    enabled: true
    # Can be either Deployment or DaemonSet
    kind: Deployment
    # Number of pods of the deployment (only applies when kind == Deployment)
    replicas: 1
    # Additional deployment annotations
    annotations: {}
    # Additional deployment labels
    labels: {}
    # Additional pod annotations
    podAnnotations: {}
    # Additional pod labels
    podLabels: {}
    # Additional containers
    additionalContainers: []
    # Additional volumes available for use with initContainers and additionalContainers
    additionalVolumes: []
    # Additional initContainers
    initContainers: []
    # Image name, tag, and pull policy
    image:
      name: bitwarden/admin
      tag: ""
      pullPolicy: IfNotPresent
  # The API deployment
  api:
    enabled: true
    # Can be either Deployment or DaemonSet
    kind: Deployment
    # Number of pods of the deployment (only applies when kind == Deployment)
    replicas: 1
    # Additional deployment annotations
    annotations: {}
    # Additional deployment labels
    labels: {}
    # Additional pod annotations
    podAnnotations: {}
    # Additional pod labels
    podLabels: {}
    # Additional containers
    additionalContainers: []
    # Additional volumes available for use with initContainers and additionalContainers
    additionalVolumes: []
    # Additional initContainers
    initContainers: []
    # Image name, tag, and pull policy
    image:
      name: bitwarden/api
      tag: ""
      pullPolicy: IfNotPresent
  # The Attachments deployment
  attachments:
    enabled: true
    # Can be either Deployment or DaemonSet
    kind: Deployment
    # Number of pods of the deployment (only applies when kind == Deployment)
    replicas: 1
    # Additional deployment annotations
    annotations: {}
    # Additional deployment labels
    labels: {}
    # Additional pod annotations
    podAnnotations: {}
    # Additional pod labels
    podLabels: {}
    # Additional containers
    additionalContainers: []
    # Additional volumes available for use with initContainers and additionalContainers
    additionalVolumes: []
    # Additional initContainers
    initContainers: []
    # Image name, tag, and pull policy
    image:
      name: bitwarden/attachments
      tag: ""
      pullPolicy: IfNotPresent
  # The Events deployment
  events:
    enabled: true
    # Can be either Deployment or DaemonSet
    kind: Deployment
    # Number of pods of the deployment (only applies when kind == Deployment)
    replicas: 1
    # Additional deployment annotations
    annotations: {}
    # Additional deployment labels
    labels: {}
    # Additional pod annotations
    podAnnotations: {}
    # Additional pod labels
    podLabels: {}
    # Additional containers
    additionalContainers: []
    # Additional volumes available for use with initContainers and additionalContainers
    additionalVolumes: []
    # Additional initContainers
    initContainers: []
    # Image name, tag, and pull policy
    image:
      name: bitwarden/events
      tag: ""
      pullPolicy: IfNotPresent
  # The Icons deployment
  icons:
    enabled: true
    # Can be either Deployment or DaemonSet
    kind: Deployment
    # Number of pods of the deployment (only applies when kind == Deployment)
    replicas: 1
    # Additional deployment annotations
    annotations: {}
    # Additional deployment labels
    labels: {}
    # Additional pod annotations
    podAnnotations: {}
    # Additional pod labels
    podLabels: {}
    # Additional containers
    additionalContainers: []
    # Additional volumes available for use with initContainers and additionalContainers
    additionalVolumes: []
    # Additional initContainers
    initContainers: []
    # Image name, tag, and pull policy
    image:
      name: bitwarden/icons
      tag: ""
      pullPolicy: IfNotPresent
  # The Identity deployment
  identity:
    enabled: true
    # Can be either Deployment or DaemonSet
    kind: Deployment
    # Number of pods of the deployment (only applies when kind == Deployment)
    replicas: 1
    # Additional deployment annotations
    annotations: {}
    # Additional deployment labels
    labels: {}
    # Additional pod annotations
    podAnnotations: {}
    # Additional pod labels
    podLabels: {}
    # Additional containers
    additionalContainers: []
    # Additional volumes available for use with initContainers and additionalContainers
    additionalVolumes: []
    # Additional initContainers
    initContainers: []
    # Image name, tag, and pull policy
    image:
      name: bitwarden/identity
      tag: ""
      pullPolicy: IfNotPresent
  # The MSSQL deployment
  # If database.type == "mssql"
  mssql:
    ## - Annotations to add to the MSSQL deployment
    annotations: {}
    ## - Labels to add to the MSSQL deployment
    labels: {}
    ## - Annotations to add to the MSSQL deployment pods
    podAnnotations: {}
    ## - Labels to add to the MSSQL deployment pods
    podLabels: {}
    # Image name, tag, and pull policy
    image:
      name: bitwarden/mssql
      tag: ""
      pullPolicy: IfNotPresent
    ## - The containers are limited to the resources below
    resources:
      limits:
        memory: 2Gi
  # The Notifications deployment
  notifications:
    enabled: true
    # Can be either Deployment or DaemonSet
    kind: Deployment
    # Number of pods of the deployment (only applies when kind == Deployment)
    replicas: 1
    # Additional deployment annotations
    annotations: {}
    # Additional deployment labels
    labels: {}
    # Additional pod annotations
    podAnnotations: {}
    # Additional pod labels
    podLabels: {}
    # Additional containers
    additionalContainers: []
    # Additional volumes available for use with initContainers and additionalContainers
    additionalVolumes: []
    # Additional initContainers
    initContainers: []
    # Image name, tag, and pull policy
    image:
      name: bitwarden/notifications
      tag: ""
      pullPolicy: IfNotPresent
  # The Portal deployment
  portal:
    enabled: true
    # Can be either Deployment or DaemonSet
    kind: Deployment
    # Number of pods of the deployment (only applies when kind == Deployment)
    replicas: 1
    # Additional deployment annotations
    annotations: {}
    # Additional deployment labels
    labels: {}
    # Additional pod annotations
    podAnnotations: {}
    # Additional pod labels
    podLabels: {}
    # Additional containers
    additionalContainers: []
    # Additional volumes available for use with initContainers and additionalContainers
    additionalVolumes: []
    # Additional initContainers
    initContainers: []
    # Image name, tag, and pull policy
    image:
      name: bitwarden/portal
      tag: ""
      pullPolicy: IfNotPresent
  # The Proxy deployment
  proxy:
    enabled: true
    # Can be either Deployment or DaemonSet
    kind: Deployment
    # Number of pods of the deployment (only applies when kind == Deployment)
    replicas: 1
    # Additional deployment annotations
    annotations: {}
    # Additional deployment labels
    labels: {}
    # Additional pod annotations
    podAnnotations: {}
    # Additional pod labels
    podLabels: {}
    # Additional containers
    additionalContainers: []
    # Additional volumes available for use with initContainers and additionalContainers
    additionalVolumes: []
    # Additional initContainers
    initContainers: []
    # Image name, tag, and pull policy
    image:
      name: bitwarden/proxy
      tag: ""
      pullPolicy: IfNotPresent
  # The SSO deployment
  sso:
    enabled: true
    # Can be either Deployment or DaemonSet
    kind: Deployment
    # Number of pods of the deployment (only applies when kind == Deployment)
    replicas: 1
    # Additional deployment annotations
    annotations: {}
    # Additional deployment labels
    labels: {}
    # Additional pod annotations
    podAnnotations: {}
    # Additional pod labels
    podLabels: {}
    # Additional containers
    additionalContainers: []
    # Additional volumes available for use with initContainers and additionalContainers
    additionalVolumes: []
    # Additional initContainers
    initContainers: []
    # Image name, tag, and pull policy
    image:
      name: bitwarden/sso
      tag: ""
      pullPolicy: IfNotPresent
  # The Web deployment
  web:
    enabled: true
    # Can be either Deployment or DaemonSet
    kind: Deployment
    # Number of pods of the deployment (only applies when kind == Deployment)
    replicas: 1
    # Additional deployment annotations
    annotations: {}
    # Additional deployment labels
    labels: {}
    # Additional pod annotations
    podAnnotations: {}
    # Additional pod labels
    podLabels: {}
    # Additional containers
    additionalContainers: []
    # Additional volumes available for use with initContainers and additionalContainers
    additionalVolumes: []
    # Additional initContainers
    initContainers: []
    # Image name, tag, and pull policy
    image:
      name: bitwarden/web
      tag: ""
      pullPolicy: IfNotPresent

#
# Configure services
#
service:
  # The Admin service
  admin:
    enabled: true
    # Additional service annotations
    annotations: {}
    # Additional service labels
    labels: {}
    # Service type (Can be ExternalName, ClusterIP, NodePort, or LoadBalancer)
    type: ClusterIP
    # Port exposed by this service
    port: 5000
    # Port to access on the pods targeted by the service
    targetPort: 5000
  # The API service
  api:
    enabled: true
    # Additional service annotations
    annotations: {}
    # Additional service labels
    labels: {}
    # Service type (Can be ExternalName, ClusterIP, NodePort, or LoadBalancer)
    type: ClusterIP
    # Port exposed by this service
    port: 5000
    # Port to access on the pods targeted by the service
    targetPort: 5000
  # The Attachments service
  attachments:
    enabled: true
    # Additional service annotations
    annotations: {}
    # Additional service labels
    labels: {}
    # Service type (Can be ExternalName, ClusterIP, NodePort, or LoadBalancer)
    type: ClusterIP
    # Port exposed by this service
    port: 5000
    # Port to access on the pods targeted by the service
    targetPort: 5000
  # The Events service
  events:
    enabled: true
    # Additional service annotations
    annotations: {}
    # Additional service labels
    labels: {}
    # Service type (Can be ExternalName, ClusterIP, NodePort, or LoadBalancer)
    type: ClusterIP
    # Port exposed by this service
    port: 5000
    # Port to access on the pods targeted by the service
    targetPort: 5000
  # The Icons service
  icons:
    enabled: true
    # Additional service annotations
    annotations: {}
    # Additional service labels
    labels: {}
    # Service type (Can be ExternalName, ClusterIP, NodePort, or LoadBalancer)
    type: ClusterIP
    # Port exposed by this service
    port: 5000
    # Port to access on the pods targeted by the service
    targetPort: 5000
  # The Identity service
  identity:
    enabled: true
    # Additional service annotations
    annotations: {}
    # Additional service labels
    labels: {}
    # Service type (Can be ExternalName, ClusterIP, NodePort, or LoadBalancer)
    type: ClusterIP
    # Port exposed by this service
    port: 5000
    # Port to access on the pods targeted by the service
    targetPort: 5000
  # The MSSQL service
  # If database.type == "mssql"
  mssql:
    ## - Annotations to add to the MSSQL service
    annotations: {}
    ## - Labels to add to the MSSQL service
    labels: {}
    ## - Type of the MSSQL service - Can be ExternalName, ClusterIP, NodePort, and LoadBalancer
    type: ClusterIP
    ## - The port exposed by the MSSQL service
    port: 1433
    # Port to access on the pods targeted by the service
    targetPort: 1433
  # The Notifications service
  notifications:
    enabled: true
    # Additional service annotations
    annotations: {}
    # Additional service labels
    labels: {}
    # Service type (Can be ExternalName, ClusterIP, NodePort, or LoadBalancer)
    type: ClusterIP
    # Port exposed by this service
    port: 5000
    # Port to access on the pods targeted by the service
    targetPort: 5000
  # The Portal service
  portal:
    enabled: true
    # Additional service annotations
    annotations: {}
    # Additional service labels
    labels: {}
    # Service type (Can be ExternalName, ClusterIP, NodePort, or LoadBalancer)
    type: ClusterIP
    # Port exposed by this service
    port: 5000
    # Port to access on the pods targeted by the service
    targetPort: 5000
  # The Proxy service
  proxy:
    enabled: true
    # Additional service annotations
    annotations: {}
    # Additional service labels
    labels: {}
    # Service type (Can be ExternalName, ClusterIP, NodePort, or LoadBalancer)
    type: ClusterIP
    # Port exposed by this service
    port: 8080
    # Port to access on the pods targeted by the service
    targetPort: 8080
  # The SSO service
  sso:
    enabled: true
    # Additional service annotations
    annotations: {}
    # Additional service labels
    labels: {}
    # Service type (Can be ExternalName, ClusterIP, NodePort, or LoadBalancer)
    type: ClusterIP
    # Port exposed by this service
    port: 5000
    # Port to access on the pods targeted by the service
    targetPort: 5000
  # The Web service
  web:
    enabled: true
    # Additional service annotations
    annotations: {}
    # Additional service labels
    labels: {}
    # Service type (Can be ExternalName, ClusterIP, NodePort, or LoadBalancer)
    type: ClusterIP
    # Port exposed by this service
    port: 5000
    # Port to access on the pods targeted by the service
    targetPort: 5000

#
# Configure volumes
#
volume:
  attachments:
    # If specified, existing claim will be used instead of creating a new PVC.
    # existingClaim: ""
    # Additional volume annotations
    annotations: {}
    # Additional volume labels
    labels: {}
    # Access mode
    accessMode: ReadWriteMany
    # Storage class
    # storageClass: ""
    # Storage size
    size: 1Gi
  dataprotection:
    # If specified, existing claim will be used instead of creating a new PVC.
    # existingClaim: ""
    # Additional volume annotations
    annotations: {}
    # Additional volume labels
    labels: {}
    # Access mode
    accessMode: ReadWriteMany
    # Storage class
    # storageClass: ""
    # Storage size
    size: 1Gi
  licenses:
    # If specified, existing claim will be used instead of creating a new PVC.
    # existingClaim: ""
    # Additional volume annotations
    annotations: {}
    # Additional volume labels
    labels: {}
    # Access mode
    accessMode: ReadWriteMany
    # Storage class
    # storageClass: ""
    # Storage size
    size: 1Gi
  # If database.type == "container":
  mssql:
    backups:
      # If specified, existing claim will be used instead of creating a new PVC.
      # existingClaim: ""
      # Additional volume annotations
      annotations: {}
      # Additional volume labels
      labels: {}
      # Access mode
      accessMode: ReadWriteMany
      # Storage class
      # storageClass: ""
      # Storage size
      size: 10Gi
    data:
      # If specified, existing claim will be used instead of creating a new PVC.
      # existingClaim: ""
      # Additional volume annotations
      annotations: {}
      # Additional volume labels
      labels: {}
      # Access mode
      accessMode: ReadWriteMany
      # Storage class
      # storageClass: ""
      # Storage size
      size: 10Gi
    log:
      # If specified, existing claim will be used instead of creating a new PVC.
      # existingClaim: ""
      # Additional volume annotations
      annotations: {}
      # Additional volume labels
      labels: {}
      # Access mode
      accessMode: ReadWriteMany
      # Storage class
      # storageClass: ""
      # Storage size
      size: 10Gi
